setwd(c:/users/troberts/dropbox/R/DataAnalysis/)
setwd("c:")
setwd("c:\users\troberts\dropbox\R\DataAnalysis")
setwd("C:/users/troberts/dropbox/r/dataanalysis")
getwd()
dir()
?Orthodont
library(lattice)
library(nlme)
?Orthodont
Orthodont
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
x<-rnorm(100)
y<-x+rnorm(100, sd=0.5)
f<-gl(2, 50, labels=c("Group 1", "Group 2"))
xyplot(y~x | f)
xyplot(y~x|f, )
xyplot(y~x|f, panel=function(x,y, ...){palnel.xyplot(x, y, ...)  panel.lmline(x,y, col=1)}
xyplot(y~x|f, panel=function(x,y, ...){palnel.xyplot(x, y, ...)  panel.lmline(x,y, col=1)})
xyplot(y~x|f, panel=function(x,y, ...){panel.xyplot(x, y, ...)  panel.lmline(x,y, col=1)})
?source
getwd()
source('C:/Users/ted/Documents/My Dropbox/R/DataAnalysis/xyplot1.R')
source('C:/Users/ted/Documents/My Dropbox/R/DataAnalysis/xyplot1.R')
xyplot1
dir()
xyplot1.R
source('C:/Users/ted/Documents/My Dropbox/R/DataAnalysis/xyplot1.R')
source('C:/Users/ted/Documents/My Dropbox/R/DataAnalysis/xyplot1.R')
xyplot1
xyplot1()
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 1)
})
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 5)
})
3
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 3)
})
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 13)
})
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 2)
})
xyplot(y ~ x | f,
panel=function(x,y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x,y, col = 4)
})
package ? lattice
library help=lattice
library (help=lattice)
data(environmental)
?environmental
xyplot(ozone ~ radi)
xyplot(ozone ~ radi)
head(environmental)
xyplog(ozone ~ radi)
xyplot(ozone ~ radi, data=environmental)
xyplot(ozone ~ radiation, data=environmental)
xyplot(ozone ~ radiation, data=environmental, main = "Ozone vs. Radiation")
xyplot(ozone ~ radiation, data=environmental, main = "Ozone vs. Radiation", col=2)
xyplot(ozone ~ radiation, data=environmental, main = "Ozone vs. Radiation", col= c("Blue", "Green")
)
xyplot(ozone ~ radiation, data=environmental, main = "Ozone vs. Radiation", col= c("Blue", "Blue", "Green"))
summary(environmental$temperature)
boxplot(environmental$temperature)
temp.cut<- equal.count(environmental$temperature)
temp.cut
temp.cut<- equal.count(environmental$temperature, 4)
temp.cut
xyplot(ozone~radiation | temp.cut, data=environmental)
xyplot(ozone~radiation | temp.cut[1,], data=environmental)
xyplot(ozone~radiation | temp.cut[4,], data=environmental)
xyplot(ozone~radiation | temp.cut[, 4], data=environmental)
xyplot(ozone~radiation | temp.cut[1,], data=environmental)
xyplot(ozone~radiation | temp.cut[1,], data=environmental, layout = c(1,4), as.table=TRUE)
xyplot(ozone~radiation | temp.cut, data=environmental, layout = c(1,4), as.table=TRUE)
xyplot(ozone~radiation | temp.cut, data=environmental, as.table=TRUE)
syplot(ozone ~ radiation | temp.cut, data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="red")
})
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
})
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
}
xlab="Solar Radiation", ylab = "Ozone (ppb)",
main = "Ozone vs. Solar Radiation")
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
}
xlab="Solar Radiation", ylab = "Ozone - ppb",
main = "Ozone vs. Solar Radiation")
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
}
xlab ="Solar Radiation", ylab = "Ozone - ppb")
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
},
xlab ="Solar Radiation",
ylab = "Ozone (ppb)"
main = "Ozone vs. Solar Radiation")
xyplot(ozone ~ radiation | temp.cut, pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
fit <- lm(y ~ x)
panel.abline(fit, lwd=2, col="green")
},
xlab ="Solar Radiation",
ylab = "Ozone (ppb)",
main = "Ozone vs. Solar Radiation")
wind.cut <- equal.count(environmental$wind, 4)
wind.cut
xyplot(ozone ~ radiation | temp.cut * wind.cut,
pch=20,
data = environmental,
as.table=TRUE,
panel = function(x,y, ...){
panel.xyplot(x, y, ...)
panel.loess(x,y)
},
xlab ="Solar Radiation",
ylab = "Ozone (ppb)",
main = "Ozone vs. Solar Radiation")
splon(~environmental)
splom(~environmental)
histogram(~temperature, data=environmental)
histogram(~ozone, data=environmental)
histogram(~radiation, data=environmental)
histogram(~temperature | wind.cut, data=environmental)
histogram(~ozone | temp.cut * wind.cut, data = environmental)
library(ggplot2)
str(mpg)
ggplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom= c("point", "smooth"))
qplot(displ, hwy, data=mpg, geom= c("point", "smooth"))
maacs
data(maacs)
library(grDevices)
color()
?grDevices
colors()
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100))
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(10))
library(RColorBrewer)
cols<-brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
install.packages("Swirl")
install.packages("swirl")
library(swirl)
getwd()
library(swirl)
getoption("repo")
getOption("repo")
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("RCurl")
library(swirl)
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
mySqrt <- sqrt(z-1)
mySqrt
myDiv<- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
x <- rL
x <- 4L
class(x)
x <- c(c, TRUE)
class(x)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10] <- 4
x
getwd()
read.csv("hw1_data.csv")
data <- read.table(hw1_data.csv)
data <- read.csv("hw1_data.csv")
data
data2 <- read.csv("hw1_data.csv")
data2
data2 <- read.csv("hw1_data.csv", nrows = 2)
data2
good <- complete.cases(data)
good
good[1]
ozone31 <- subset(data, Ozone<31 & Temp > 90)
mean(ozone31[Solar.R])
mean(ozone31[Solar.R])
ozone31
ozone31 <- subset(data, ozone > 31 & Temp > 90)
ozone31 < subset(data, Ozone > 31, Temp > 90)
ozone31 <- subset(data, Ozone > 31 & Temp > 90)
ozone31
mean(ozone31[Solar.R])
month6 <- subset(data, Month==6)
month6
bad <- is.NA(data)
bad <- is.na(data)
bad
data(!bad)
data[!bad]
colMeans(data[Ozone])
colMeans(data(Ozone))
dat
data
apply(data, 1, mean)
mean(data$Ozone)
good
mean(data$Ozone[!is.na])
month6
mean(month6$Temp)
month6 <- subset(data, Month==5)
month6
max(month6$Ozone)
getwd()
pmBetter()
dir
dir()
cd specdata
cd(specdata)
dir(specdata)
dir("specdata")
pmBetter(directory="specdata", id=1:10)
source('C:/Users/troberts/Dropbox/R/DataAnalysis/specdata/pmBetter.R')
pmBetter(directory="specdata", id=1:10)
source('C:/Users/troberts/Dropbox/R/DataAnalysis/specdata/pmBetter.R')
pmBetter(directory="specdata", id=1:10)
setwd("C:/Users/ted/ProgrammingAssignment2")
dir)_
dir()
source('~/.active-rstudio-document')
cachemean(c(1, 2, 3, 4, 5, 6))
vector1 <- (1, 2, 3, 4, 5, 6)
vector1 <- 1:10
cachemean(vector1)
vector1
vector2 <- 5, 6, 7, 8, 9
vector2 <- 7:15
cachemean(vector1, vector2)
makevector(vector1)
makeVector(vector1)
cachemean(makevector(vector1))
cachemean(makeVector(vector1))
mtx1 <- matrix(
c(2, 4, 3, 1, 5, 7),
nrow=3,
ncol=2)
mtx1
mtx2 <- solve(mtx1)
mtx1 <- matrix(c(1,2,3,4), nrow=2, ncol=2)
mtx1
solve(mtx1)
mtx1
cachemean
source('C:/Users/ted/ProgrammingAssignment2/cachevector.R')
debugSource('C:/Users/ted/ProgrammingAssignment2/cachevector.R')
debugSource('C:/Users/ted/ProgrammingAssignment2/cachevector.R')
cachemean(makeVector(vector1))
cachemean(makeVector(vector1))
list(x-x, y-y)
list(set-set, get - get, setmean - setmean, getmean - getmean)
m
x
y
x
ls(cachemean)
ls(environment(cachemean))
ls(environment(makeVector))
get(x(environment(makeVector)))
get(set(environment(makeVector)))
source('C:/Users/ted/ProgrammingAssignment2/scopetest.R')
source('C:/Users/ted/ProgrammingAssignment2/scopetest.R')
f(3)
f(3)
debugSource('C:/Users/ted/ProgrammingAssignment2/cachevector.R')
debugSource('C:/Users/ted/ProgrammingAssignment2/cachevector.R')
makevector(c(1, 2, 3, 4))
makeVector(c(1, 2, 3, 4))
screwme <- function(x - numeric()){}
mtx1
mtx1 <- matrix(1:4, ncol=2, nrow=2)
mtx1
source('C:/Users/ted/ProgrammingAssignment2/cachematrix.R')
cacheSolve(cachematrix(mtx1))
source('C:/Users/ted/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(mtx1))
solve(mtx1)
source('C:/Users/ted/ProgrammingAssignment2/cachematrix.R')
